name: "testing-001"
on:
  push:
    branches:
      - master

jobs:
  grab-random:
    permissions:
      contents: read
      id-token: write
    runs-on: "ubuntu-latest"
    steps:
      - id: "vault-login"
        name: "Login into Vault"
        #uses: hashicorp/vault-action@v2.4.1
        #with:
        #  exportToken: true
        #  url: "${{ secrets.VAULT_ADDR }}"
        #  role: "testing-001"
        #  method: "jwt"
        #  path: "jwt-github"
        #  jwtTtl: 360
        run: |
          set -euo pipefail

          get_gh_id_token () {
            local url="${ACTIONS_ID_TOKEN_REQUEST_URL}"
            local bearer="${ACTIONS_ID_TOKEN_REQUEST_TOKEN}"

            local audience="${1:-}"
            local curl_args=(
              -H @<(echo "Authorization: Bearer ${bearer}")
              -H "User-Agent: actions/oidc-client"
              -H "Accept: application/json"
            )

            [ -n "${audience}" ] && curl_args+=(-d "audience=${audience}")
            response="$(curl -G -s "${curl_args[@]}" "${url}")"

            echo "${response}"
          }

          set -x

          #gh_token="$(get_gh_id_token)"
          get_gh_id_token
          echo "token acquired, but vault login is not implemented"
          exit 1

      - id: "install-packages"
        name: "Install additional packages"
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg >/dev/null
          gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update
          sudo apt-get -y install jq vault

      - id: "test"
        name: "Test vault"
        run: |
          set -euo pipefail

          export VAULT_ADDR="${{ secrets.VAULT_ADDR }}"
          echo "Random bytes:"
          vault write -format=json sys/tools/random bytes=32 format=hex | jq -r '.data.random_bytes'
